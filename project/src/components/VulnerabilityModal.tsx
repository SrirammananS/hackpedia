import React from 'react';
import { X } from 'lucide-react';

interface Vulnerability {
  _id: string;
  title: string;
  description: string;
  whereToTest: string;
  howToTest: string;
  payloads: string[];
  codeSnippet: string;
  mitigation: string;
  bypassTricks: string;
}

interface Props {
  vulnerability: Vulnerability;
  onClose: () => void;
}

function VulnerabilityModal({ vulnerability, onClose }: Props) {
  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto">
        <div className="sticky top-0 bg-white border-b border-gray-200 p-4 flex justify-between items-center">
          <h2 className="text-2xl font-bold text-gray-900">{vulnerability.title}</h2>
          <button
            onClick={onClose}
            className="p-2 hover:bg-gray-100 rounded-full"
          >
            <X className="h-6 w-6" />
          </button>
        </div>
        
        <div className="p-6 space-y-6">
          <section>
            <h3 className="text-lg font-semibold mb-2">Description</h3>
            <p className="text-gray-700">{vulnerability.description}</p>
          </section>

          <section>
            <h3 className="text-lg font-semibold mb-2">Where to Test</h3>
            <p className="text-gray-700">{vulnerability.whereToTest}</p>
          </section>

          <section>
            <h3 className="text-lg font-semibold mb-2">How to Test</h3>
            <p className="text-gray-700">{vulnerability.howToTest}</p>
          </section>

          <section>
            <h3 className="text-lg font-semibold mb-2">Payloads</h3>
            <div className="space-y-2">
              {vulnerability.payloads.map((payload, index) => (
                <div
                  key={index}
                  className="bg-gray-100 p-3 rounded-md font-mono text-sm"
                  onCopy={(e) => e.preventDefault()}
                >
                  {payload}
                </div>
              ))}
            </div>
          </section>

          {vulnerability.codeSnippet && (
            <section>
              <h3 className="text-lg font-semibold mb-2">Code Snippet</h3>
              <pre className="bg-gray-100 p-4 rounded-md overflow-x-auto">
                <code>{vulnerability.codeSnippet}</code>
              </pre>
            </section>
          )}

          <section>
            <h3 className="text-lg font-semibold mb-2">Mitigation</h3>
            <p className="text-gray-700">{vulnerability.mitigation}</p>
          </section>

          {vulnerability.bypassTricks && (
            <section>
              <h3 className="text-lg font-semibold mb-2">Bypass Tricks</h3>
              <p className="text-gray-700">{vulnerability.bypassTricks}</p>
            </section>
          )}
        </div>
      </div>
    </div>
  );
}

export default VulnerabilityModal;