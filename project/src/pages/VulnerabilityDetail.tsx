import React from 'react';
import { useParams, Link } from 'react-router-dom';
import { useQuery } from 'react-query';
import { getVulnerability } from '../api/vulnerabilityApi';
import { ArrowLeft, Shield, Target, Code, AlertTriangle, Loader, AlertCircle } from 'lucide-react';

export const VulnerabilityDetail: React.FC = () => {
  const { id } = useParams<{ id: string }>();
  const { data: vulnerability, isLoading, error } = useQuery(
    ['vulnerability', id], 
    () => getVulnerability(id!),
    {
      retry: 1,
      onError: (error) => {
        console.error('Failed to fetch vulnerability:', error instanceof Error ? error.message : 'Unknown error');
      }
    }
  );

  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <Loader className="w-8 h-8 animate-spin text-blue-500" />
      </div>
    );
  }

  if (error) {
    return (
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <Link to="/" className="flex items-center text-blue-500 hover:text-blue-600 mb-6">
          <ArrowLeft className="w-5 h-5 mr-2" />
          Back to list
        </Link>
        <div className="flex flex-col items-center justify-center p-8 bg-white rounded-lg shadow-lg">
          <AlertCircle className="w-12 h-12 text-red-500 mb-4" />
          <h2 className="text-xl font-semibold text-gray-900 mb-2">Unable to Load Vulnerability</h2>
          <p className="text-gray-600 mb-4">
            Please make sure the backend server is running at http://localhost:5000
          </p>
          <button 
            onClick={() => window.location.reload()}
            className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
          >
            Try Again
          </button>
        </div>
      </div>
    );
  }

  if (!vulnerability) {
    return (
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <Link to="/" className="flex items-center text-blue-500 hover:text-blue-600 mb-6">
          <ArrowLeft className="w-5 h-5 mr-2" />
          Back to list
        </Link>
        <div className="bg-white rounded-lg shadow-lg p-8 text-center">
          <h2 className="text-xl font-semibold text-gray-900">Vulnerability not found</h2>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <Link to="/" className="flex items-center text-blue-500 hover:text-blue-600 mb-6">
        <ArrowLeft className="w-5 h-5 mr-2" />
        Back to list
      </Link>
      
      <div className="bg-white rounded-lg shadow-lg p-8">
        <div className="flex items-center space-x-3 mb-6">
          <AlertTriangle className="w-8 h-8 text-red-500" />
          <h1 className="text-3xl font-bold text-gray-900">{vulnerability.title}</h1>
        </div>

        <div className="space-y-8">
          <section>
            <h2 className="text-xl font-semibold text-gray-900 mb-3">Description</h2>
            <p className="text-gray-700">{vulnerability.description}</p>
          </section>

          <section>
            <h2 className="text-xl font-semibold text-gray-900 mb-3 flex items-center">
              <Target className="w-5 h-5 mr-2" />
              Where to Test
            </h2>
            <p className="text-gray-700">{vulnerability.whereToTest}</p>
          </section>

          <section>
            <h2 className="text-xl font-semibold text-gray-900 mb-3">How to Test</h2>
            <p className="text-gray-700">{vulnerability.howToTest}</p>
          </section>

          <section>
            <h2 className="text-xl font-semibold text-gray-900 mb-3 flex items-center">
              <Code className="w-5 h-5 mr-2" />
              Payloads
            </h2>
            <div className="bg-gray-50 rounded-lg p-4">
              <ul className="list-disc list-inside space-y-2">
                {vulnerability.payloads.map((payload, index) => (
                  <li key={index} className="text-gray-700 font-mono">{payload}</li>
                ))}
              </ul>
            </div>
          </section>

          {vulnerability.codeSnippet && (
            <section>
              <h2 className="text-xl font-semibold text-gray-900 mb-3">Code Snippet</h2>
              <pre className="bg-gray-50 rounded-lg p-4 overflow-x-auto">
                <code className="text-sm">{vulnerability.codeSnippet}</code>
              </pre>
            </section>
          )}

          <section>
            <h2 className="text-xl font-semibold text-gray-900 mb-3 flex items-center">
              <Shield className="w-5 h-5 mr-2" />
              Mitigation
            </h2>
            <p className="text-gray-700">{vulnerability.mitigation}</p>
          </section>

          {vulnerability.bypassTricks && (
            <section>
              <h2 className="text-xl font-semibold text-gray-900 mb-3">Bypass Tricks</h2>
              <p className="text-gray-700">{vulnerability.bypassTricks}</p>
            </section>
          )}
        </div>
      </div>
    </div>
  );
};