import React from 'react';
import { useQuery } from 'react-query';
import { getVulnerabilities } from '../api/vulnerabilityApi';
import { VulnerabilityCard } from '../components/VulnerabilityCard';
import { Search, Loader, AlertCircle } from 'lucide-react';

export const VulnerabilityList: React.FC = () => {
  const { data: vulnerabilities, isLoading, error } = useQuery('vulnerabilities', getVulnerabilities, {
    retry: 1,
    onError: (error) => {
      console.error('Failed to fetch vulnerabilities:', error instanceof Error ? error.message : 'Unknown error');
    }
  });
  const [searchTerm, setSearchTerm] = React.useState('');

  const filteredVulnerabilities = vulnerabilities?.filter(vuln => 
    vuln.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
    vuln.description.toLowerCase().includes(searchTerm.toLowerCase())
  );

  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <Loader className="w-8 h-8 animate-spin text-blue-500" />
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen p-4">
        <AlertCircle className="w-12 h-12 text-red-500 mb-4" />
        <div className="text-center">
          <h2 className="text-xl font-semibold text-gray-900 mb-2">Unable to Load Vulnerabilities</h2>
          <p className="text-gray-600 mb-4">
            Please make sure the backend server is running at http://localhost:5000
          </p>
          <button 
            onClick={() => window.location.reload()}
            className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
          >
            Try Again
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div className="flex justify-between items-center mb-8">
        <h1 className="text-3xl font-bold text-gray-900">VAPT Vulnerabilities</h1>
        <div className="relative">
          <input
            type="text"
            placeholder="Search vulnerabilities..."
            className="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <Search className="w-5 h-5 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2" />
        </div>
      </div>
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {filteredVulnerabilities?.map((vulnerability) => (
          <VulnerabilityCard key={vulnerability._id} vulnerability={vulnerability} />
        ))}
      </div>
    </div>
  );
};